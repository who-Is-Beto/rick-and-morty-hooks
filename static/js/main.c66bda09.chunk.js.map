{"version":3,"sources":["context/ThemeContext.js","components/Header.jsx","components/Searcher.jsx","hooks/useCharacter.js","components/Characters.jsx","App.js","index.js"],"names":["ThemeContext","React","createContext","Header","props","color","useContext","className","darkMode","style","type","onClick","Searcher","ref","reference","value","onChange","placeholder","useCharacters","url","useState","characters","setCharacters","useEffect","fetch","then","response","json","data","results","initialState","favorites","favoriteReducer","state","action","payload","filter","items","id","Characters","useReducer","dispatch","search","setSearch","SearchInput","useRef","handleSearch","useCallback","current","filterUsers","useMemo","user","name","toLowerCase","includes","toLocaleLowerCase","console","log","length","map","favCharacter","src","image","alt","status","character","App","setDarkMode","ReactDOM","render","Provider","document","getElementById"],"mappings":"uRAIeA,G,MAFMC,IAAMC,cAAc,OCqB1BC,EAnBA,SAACC,GAEd,IAAMC,EAAQC,qBAAWN,GAEzB,OACE,yBAAQO,UAAWH,EAAMI,SAAW,mBAAqB,oBAAzD,UACE,qBAAKD,UAAU,OAAf,SACE,mBAAGE,MAAO,CAAEJ,SAAZ,2BAGF,qBAAKE,UAAU,oBAAf,SACE,wBAAQA,UAAWH,EAAMI,SAAW,mBAAqB,oBAAqBE,KAAK,SAASC,QAAS,kBAAMP,EAAMO,WAAjH,SACGP,EAAMI,SAAW,aAAe,oB,oBCD5BI,MAbf,SAAkBR,GAChB,OACE,uBACES,IAAKT,EAAMU,UACXP,UAAU,sBACVG,KAAK,OACLK,MAAOX,EAAMW,MACbC,SAAUZ,EAAMY,SAChBC,YAAY,iCCGHC,EAXO,SAACC,GAAS,IAAD,EACOC,mBAAS,IADhB,mBACtBC,EADsB,KACVC,EADU,KAO7B,OALAC,qBAAU,WACRC,MAAML,GACHM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIN,EAAcM,EAAKC,cAClC,CAACV,IACGE,GCJHS,G,MAAe,CACnBC,UAAW,KAKPC,EAAkB,SAACC,EAAOC,GAC9B,OAAQA,EAAOxB,MACb,IAAK,kBACH,OAAO,2BACFuB,GADL,IAEEF,UAAU,GAAD,mBAAME,EAAMF,WAAZ,CAAuBG,EAAOC,YAE3C,IAAK,qBACH,OAAO,2BACFF,GADL,IAEEF,UAAWE,EAAMF,UAAUK,QAAO,SAAAC,GAAK,OAAIA,EAAMC,KAAOJ,EAAOC,aAEnE,QACE,OAAO,eACFF,KAgGIM,EA3FI,WAAO,IAAD,EAEOC,qBAAWR,EAAiBF,GAFnC,mBAEhBC,EAFgB,KAELU,EAFK,OAGKrB,mBAAS,IAHd,mBAGhBsB,EAHgB,KAGRC,EAHQ,KAIjBC,EAAcC,iBAAO,MAErBxB,EAAaH,EA3BT,6CA0CJ4B,EAAeC,uBAAY,WAC/BJ,EAAUC,EAAYI,QAAQjC,SAC7B,IAMGkC,EAAcC,mBAAQ,kBAAM7B,EAAWe,QAAO,SAACe,GACnD,OAAOA,EAAKC,KAAKC,cAAcC,SAASZ,EAAOa,0BAE/C,CAAClC,EAAYqB,IAGf,OACE,qCACGc,QAAQC,IAAIb,GACb,sBAAKrC,UAAU,qBAAf,UACGwB,EAAUA,UAAU2B,OAAS,EAE1B,sBAAKnD,UAAU,YAAf,UACE,gDACA,oBAAIA,UAAU,kBAAd,SACGwB,EAAUA,UAAU4B,KAAI,SAACC,GAAD,OACvB,6BACE,sBAAKrD,UAAU,iBAAf,UACE,qBAAKA,UAAU,kBAAkBsD,IAAKD,EAAaE,MAAOC,IAAI,KAC9D,sBAAKxD,UAAU,0BAAf,UACE,4BAAIqD,EAAaR,OACjB,kCAA6B,SAAxBQ,EAAaI,OAAoB,MAAQ,GAA9C,IAAmDJ,EAAaI,UAChE,wBAAQzD,UAAU,oBAAoBI,QAAS,kBAvC1C2B,EAuCkEsB,EAAatB,QAtCxGG,EAAS,CAAE/B,KAAM,qBAAsByB,QAASG,IADxB,IAACA,GAuCL,wCANGsB,EAAatB,YAc5B,GAGJ,qBAAK/B,UAAU,sBAAf,SACG,cAAC,EAAD,CAAWQ,MAAO2B,EAAQ5B,UAAW8B,EAAa5B,SAAU8B,MAG/D,sBAAKvC,UAAU,wBAAf,UACE,4CACA,oBAAIA,UAAU,mBAAd,SACG0C,EAAYU,KAAI,SAAAM,GAAS,OACxB,6BACE,sBAAK1D,UAAU,kBAAf,UACE,qBAAKA,UAAU,mBAAmBsD,IAAKI,EAAUH,MAAOC,IAAI,KAC5D,sBAAKxD,UAAU,2BAAf,UACE,4BAAI0D,EAAUb,OACd,kCAA0B,SAArBa,EAAUD,OAAoB,MAAQ,GAA3C,IAAgDC,EAAUD,UAC1D,wBACEzD,UAAU,oBACVG,KAAK,SACLC,QAAS,WAtE3B8B,EAAS,CAAE/B,KAAM,kBAAmByB,QAsEoB8B,KAHxC,oCANGA,EAAU3B,mBC9ElB4B,MAjBf,WAAgB,IAAD,EACmB9C,oBAAS,GAD5B,mBACNZ,EADM,KACI2D,EADJ,KAGb,OACE,sBAAK5D,UAAWC,EAAW,gBAAkB,iBAA7C,UACE,cAAC,EAAD,CACEA,SAAUA,EACVG,QAAS,kBAAMwD,GAAa3D,MAG9B,cAAC,EAAD,QCTN4D,IAASC,OACP,cAAC,EAAaC,SAAd,CAAuBvD,MAAM,QAA7B,SACE,cAAC,EAAD,MAEFwD,SAASC,eAAe,W","file":"static/js/main.c66bda09.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ThemeContext = React.createContext(null)\r\n\r\nexport default ThemeContext ","import '../styles/Header.css'\r\nimport { useContext } from \"react\";\r\nimport ThemeContext from '../context/ThemeContext'\r\n\r\nconst Header = (props) => {\r\n\r\n  const color = useContext(ThemeContext)\r\n\r\n  return (\r\n    <header className={props.darkMode ? 'darkmode__header' : 'lightmode__header'}>\r\n      <div className=\"logo\">\r\n        <p style={{ color }}>React Hooks</p>\r\n      </div>\r\n\r\n      <div className=\"darkmode__section\">\r\n        <button className={props.darkMode ? 'darkmode__button' : 'lightmode__button'} type=\"button\" onClick={() => props.onClick()}>\r\n          {props.darkMode ? \"Light Mode\" : \"Dark Mode\"}\r\n        </button>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","import '../styles/searcher.css'\r\n\r\nfunction Searcher(props) {\r\n  return (\r\n    <input\r\n      ref={props.reference}\r\n      className='character__searcher'\r\n      type=\"text\"\r\n      value={props.value}\r\n      onChange={props.onChange}\r\n      placeholder='Are youlooking for someone?'\r\n    />\r\n  )\r\n}\r\n\r\nexport default Searcher \r\n","import { useState, useEffect } from 'react'\r\n\r\nconst useCharacters = (url) => {\r\n  const [characters, setCharacters] = useState([])\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => setCharacters(data.results))\r\n  }, [url])\r\n  return characters\r\n}\r\n\r\n\r\nexport default useCharacters","import { useState, useReducer, useMemo, useRef, useCallback } from 'react'\r\nimport Seacrcher from './Searcher'\r\nimport useCharacters from '../hooks/useCharacter'\r\nimport '../styles/Characters.css'\r\n\r\nconst initialState = {\r\n  favorites: []\r\n}\r\n\r\nconst API = 'https://rickandmortyapi.com/api/character'\r\n\r\nconst favoriteReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TO_FAVORITE':\r\n      return {\r\n        ...state,\r\n        favorites: [...state.favorites, action.payload]\r\n      }\r\n    case 'DELETE_TO_FAVORITE':\r\n      return {\r\n        ...state,\r\n        favorites: state.favorites.filter(items => items.id !== action.payload)\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      }\r\n  }\r\n}\r\n\r\nconst Characters = () => {\r\n\r\n  const [favorites, dispatch] = useReducer(favoriteReducer, initialState)\r\n  const [search, setSearch] = useState('')\r\n  const SearchInput = useRef(null)\r\n\r\n  const characters = useCharacters(API)\r\n\r\n  const addCharacterToFavorite = (favorite) => {\r\n    dispatch({ type: 'ADD_TO_FAVORITE', payload: favorite })\r\n  }\r\n\r\n  const handleClickRemove = (id) => {\r\n    dispatch({ type: 'DELETE_TO_FAVORITE', payload: id })\r\n  }\r\n\r\n  /*  const handleSearch = () => {\r\n    setSearch(SearchInput.current.target.value)\r\n    console.log(SearchInput.current.target.value)\r\n   } */\r\n\r\n  const handleSearch = useCallback(() => {\r\n    setSearch(SearchInput.current.value);\r\n  }, [])\r\n\r\n  /*   const filterUsers = characters.filter((user) => {\r\n      return user.name.toLowerCase().includes(search.toLocaleLowerCase())\r\n    }) */\r\n\r\n  const filterUsers = useMemo(() => characters.filter((user) => {\r\n    return user.name.toLowerCase().includes(search.toLocaleLowerCase())\r\n  }),\r\n    [characters, search]\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {console.log(SearchInput)}\r\n      <div className=\"character__wrapper\">\r\n        {favorites.favorites.length > 0\r\n          ? (\r\n            <div className=\"favorites\">\r\n              <h2>Your Favorites</h2>\r\n              <ul className='favorites__list' >\r\n                {favorites.favorites.map((favCharacter) => (\r\n                  <li key={favCharacter.id}>\r\n                    <div className=\"favorite__card\">\r\n                      <img className='favorite__image' src={favCharacter.image} alt=\"\" />\r\n                      <div className=\"favorite__info fadeInUp\">\r\n                        <p>{favCharacter.name}</p>\r\n                        <p> {favCharacter.status === 'Dead' ? 'RIP' : ''} {favCharacter.status}</p>\r\n                        <button className='character__button' onClick={() => handleClickRemove(favCharacter.id)}>Delete to favorites</button>\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )\r\n          : ''\r\n        }\r\n\r\n        <div className=\"searcher__container\">\r\n          {<Seacrcher value={search} reference={SearchInput} onChange={handleSearch} />}\r\n        </div>\r\n\r\n        <div className=\"characters__container\">\r\n          <h2>Characters</h2>\r\n          <ul className=\"characters__list\">\r\n            {filterUsers.map(character => (\r\n              <li key={character.id}>\r\n                <div className=\"character__card\">\r\n                  <img className='character__image' src={character.image} alt=\"\" />\r\n                  <div className=\"character__info fadeInUp\">\r\n                    <p>{character.name}</p>\r\n                    <p> {character.status === 'Dead' ? 'RIP' : ''} {character.status}</p>\r\n                    <button\r\n                      className='character__button'\r\n                      type='button'\r\n                      onClick={() => addCharacterToFavorite(character)} >Add to favorite</button>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Characters","import Header from './components/Header'\nimport { useState } from 'react'\nimport Character from './components/Characters'\n\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(true);\n\n  return (\n    <div className={darkMode ? 'darkmode__app' : 'lightmode__app'}>\n      <Header\n        darkMode={darkMode}\n        onClick={() => setDarkMode(!darkMode)}\n      />\n\n      <Character />\n\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport ThemeContext from './context/ThemeContext'\n\nReactDOM.render(\n  <ThemeContext.Provider value='white'>\n    <App />\n  </ThemeContext.Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}